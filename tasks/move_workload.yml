---
# disable-rule:line-length
- name: restart openshift-gitops rollout
  environment:
    KUBECONFIG: "{{ openshift_kubeconfig_file }}"
  ansible.builtin.shell:
    cmd: |
      kubectl --kubeconfig "${KUBECONFIG}" rollout restart  deployment -n openshift-gitops
  changed_when: true

- name: restart openshift-image-registry-deployment
  environment:
    KUBECONFIG: "{{ openshift_kubeconfig_file }}"
  ansible.builtin.shell:
    cmd: |
      kubectl --kubeconfig "${KUBECONFIG}" rollout restart deployment image-registry -n openshift-image-registry
  changed_when: true

- name: restart rook-ceph deployments
  environment:
    KUBECONFIG: "{{ openshift_kubeconfig_file }}"
  ansible.builtin.shell:
    cmd: |
      DEPLOYMENTS=$(kubectl get deploy -n rook-ceph -l rook_cluster=rook-ceph --no-headers --kubeconfig "${KUBECONFIG}" | cut -d " " -f1)
      for DEPLOY in $DEPLOYMENTS; do
        kubectl  --kubeconfig "${KUBECONFIG}" rollout restart deployment $DEPLOY -n rook-ceph
      done
  changed_when: true

- name: restart monitoring deployments
  environment:
    KUBECONFIG: "{{ openshift_kubeconfig_file }}"
  ansible.builtin.shell:
    cmd: |
      DEPLOYMENTS=$(kubectl get deploy -n openshift-monitoring -l app.kubernetes.io/part-of=openshift-monitoring --no-headers --kubeconfig "${KUBECONFIG}" | cut -d " " -f1)
      for DEPLOY in $DEPLOYMENTS; do
        kubectl  --kubeconfig "${KUBECONFIG}" rollout restart deployment $DEPLOY -n openshift-monitoring
      done
  changed_when: true

- name: restart velero deployments
  environment:
    KUBECONFIG: "{{ openshift_kubeconfig_file }}"
  ansible.builtin.shell:
    cmd: |
      kubectl --kubeconfig "${KUBECONFIG}" rollout restart deployment -l component=velero -n velero
  changed_when: true

...
