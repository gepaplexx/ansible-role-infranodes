---
# https://access.redhat.com/solutions/5034771
- name: add infrastructure role label to infra nodes
  environment:
    KUBECONFIG: "{{ openshift_kubeconfig_file }}"
    LABEL: "{{ infranodes_label|quote }}"
  ansible.builtin.shell:
    cmd:
      # yamllint disable-line rule:line-length
      kubectl label nodes $(kubectl get nodes --no-headers -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}'| grep infra) ${LABEL}=""
  register: infranodes_labeloutput
  changed_when: '"already has a value" not in infranodes_labeloutput.stdout'
  failed_when: '"error" in infranodes_labeloutput.stdout'
  tags:
    - infranodes
    - infranodes.ocp
    - infranodes.label

- name: add app role label to worker nodes
  environment:
    KUBECONFIG: "{{ openshift_kubeconfig_file }}"
    LABEL: "{{ infranodes_app_label }}"
  ansible.builtin.shell:
    # yamllint disable-line rule:line-length
    cmd: kubectl label nodes $(kubectl get nodes --no-headers -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}'| grep worker) "${LABEL}"=""
  register: infranodes_app
  changed_when: '"already has a value" not in infranodes_app.stdout'
  failed_when: '"error" in infranodes_app.stdout'

- name: annotate namespaces initially
  environment:
    KUBECONFIG: "{{ openshift_kubeconfig_file }}"
  ansible.builtin.shell:
    # yamllint disable-line rule:line-length
    cmd: kubectl annotate project {{ item }} openshift.io/node-selector='' --overwrite --kubeconfig ${KUBECONFIG}
  loop: "{{ infranodes_namespaces }}"
  changed_when: true
  failed_when: false    # some namespaces might not exist due to not all "add-ons" are configured in the cluster

- name: add required labels for PodTopologySpreads to Nodes
  environment:
    KUBECONFIG: "{{ openshift_kubeconfig_file }}"
  ansible.builtin.shell:
    # yamllint disable-line rule:line-length
    cmd: |
      NODES=$(kubectl get nodes --no-headers | cut -d " " -f1)
      for NODE in $NODES; do
        kubectl label node $NODE topology.kubernetes.io/zone=datacenter-1 --kubeconfig ${KUBECONFIG}
        kubectl label node $NODE kubernetes.io/hostname=$NODE --kubeconfig ${KUBECONFIG}
      done
  changed_when: true
  failed_when: false    # labels already applied
...
